{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "assured-marina",
   "metadata": {},
   "source": [
    "# Reports"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "rising-honolulu",
   "metadata": {},
   "source": [
    "To communicate results, one might need to produce pdf reports out of observations. *prose* features auto-generated  $\\LaTeX$ reports from `Observation` objects."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "global-explosion",
   "metadata": {},
   "source": [
    "## Loading the phot"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "owned-notebook",
   "metadata": {},
   "source": [
    "Let's firts load some data you might have used or generated in previous tutorials (in my case I take the `.phot` we produced [here](./reduction.ipynb))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "absent-transcription",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from prose import load\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "obs = load(\"A_20220613_prose_a.phot\")\n",
    "obs.plot()\n",
    "_ = plt.ylim(0.98, 1.02)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "classified-speaker",
   "metadata": {},
   "source": [
    "## Basic Summary report"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "meaning-winner",
   "metadata": {},
   "source": [
    "You can produce many reports in prose and arange them into the `Report` object so that they are all contained in a single  $\\LaTeX$/PDF. We will make a report out of the very basic `Summary` template, which namely shows a summary of the observation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fancy-obligation",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "making summary ...\n"
     ]
    }
   ],
   "source": [
    "from prose.reports import Report, Summary\n",
    "\n",
    "# The summary template\n",
    "summary = Summary(obs)\n",
    "\n",
    "# The report\n",
    "report = Report([summary])\n",
    "report.make(f\"{obs.label}_report\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "artistic-briefing",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-info\">\n",
    "\n",
    "Note\n",
    "\n",
    "`obs.denominator` is just a conveniant attribute returning a string like `\"telescope_target_date_filter\"`\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ordinary-israel",
   "metadata": {},
   "source": [
    "The last command generated a folder containing everything needed for the included `report.tex` to be compiled on your side. This is a $\\LaTeX$ file so feel free to add notes and extend it for your needs."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fiscal-cooling",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-info\">\n",
    "\n",
    "Note\n",
    "\n",
    "Alternatively, if you have `pdflatex` isntalled you can run `report.compile()`\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6e3953b-24e0-4b01-b760-e0319f46e6ab",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2021) (preloaded format=pdflatex)\n",
      " restricted \\write18 enabled.\n",
      "entering extended mode\n",
      "(./A_20220613_prose_a_report.tex\n",
      "LaTeX2e <2020-10-01> patch level 4\n",
      "L3 programming layer <2021-02-18> (./prose-report.cls\n",
      "Document Class: prose-report 2021/01/01 prose-report\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/tools/calc.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/changepage/changepage.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/article.cls\n",
      "Document Class: article 2020/04/10 v1.4m Standard LaTeX document class\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/size10.clo))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/caption/caption.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/caption/caption3.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/keyval.sty))))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/geometry/geometry.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/iftex/ifvtex.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/iftex/iftex.sty)))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/fontenc.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/graphicx.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/graphics.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/trig.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-cfg/graphics.cfg)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-def/pdftex.def)))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/xcolor/xcolor.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-cfg/color.cfg)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/colortbl/colortbl.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/tools/array.sty)))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/roboto/roboto.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/iftex/ifxetex.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/iftex/ifluatex.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/xkeyval/xkeyval.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/xkeyval/xkeyval.tex\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/xkeyval/xkvutils.tex)))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/textcomp.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/fontenc.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/fontaxes/fontaxes.sty))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/fancyhdr/fancyhdr.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/hyperref.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/ltxcmds/ltxcmds.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/pdftexcmds/pdftexcmds.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/infwarerr/infwarerr.sty))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/kvsetkeys/kvsetkeys.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/kvdefinekeys/kvdefinekeys.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/pdfescape/pdfescape.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hycolor/hycolor.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/letltxmacro/letltxmacro.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/auxhook/auxhook.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/kvoptions/kvoptions.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/pd1enc.def)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/hyperref-langpatches.def\n",
      ") (/usr/local/texlive/2021/texmf-dist/tex/generic/intcalc/intcalc.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/etexcmds/etexcmds.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/puenc.def)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/url/url.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/bitset/bitset.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/bigintcalc/bigintcalc.sty))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/atbegshi-ltx.sty))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/hpdftex.def\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/base/atveryend-ltx.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/rerunfilecheck/rerunfilecheck.sty\n",
      "\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/uniquecounter/uniquecounter.sty\n",
      ")))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def)\n",
      "No file A_20220613_prose_a_report.aux.\n",
      "*geometry* driver: auto-detecting\n",
      "*geometry* detected driver: pdftex\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/context/base/mkii/supp-pdf.mkii\n",
      "[Loading MPS to PDF converter (version 2006.09.02).]\n",
      ") (/usr/local/texlive/2021/texmf-dist/tex/latex/epstopdf-pkg/epstopdf-base.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg))\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/nameref.sty\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/refcount/refcount.sty)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/generic/gettitlestring/gettitlestring.s\n",
      "ty)) (/usr/local/texlive/2021/texmf-dist/tex/latex/base/t1cmss.fd)\n",
      "(./summary/summary.tex\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/lm/t1lmss.fd)\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 51--51\n",
      "\n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 51--51\n",
      "\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/roboto/T1Roboto-LF.fd)\n",
      "(/usr/local/texlive/2021/texmf-dist/tex/latex/roboto/TS1Roboto-LF.fd)\n",
      "Overfull \\hbox (0.84222pt too wide) in paragraph at lines 51--51\n",
      "[][]\n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 51--51\n",
      "\n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 51--51\n",
      "\n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 63--63\n",
      "\n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 63--63\n",
      "\n",
      "\n",
      "Overfull \\hbox (19.91684pt too wide) in paragraph at lines 51--63\n",
      "[]| $[]$| \n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 75--75\n",
      "\n",
      "\n",
      "Underfull \\hbox (badness 10000) in paragraph at lines 75--75\n",
      "\n",
      "\n",
      "Overfull \\hbox (42.67912pt too wide) in paragraph at lines 63--76\n",
      "[]| $[]$| \n",
      ")\n",
      "\n",
      "Package fancyhdr Warning: \\footskip is too small (1.0pt): \n",
      "(fancyhdr)                Make it at least 12.0pt, for example:\n",
      "(fancyhdr)                \\setlength{\\footskip}{12.0pt}.\n",
      "\n",
      "[1{/usr/local/texlive/2021/texmf-var/fonts/map/pdftex/updmap/pdftex.map} <./sum\n",
      "mary/figures/stars.png> <./summary/figures/psf.png> <./summary/figures/lightcur\n",
      "ve.png> <./summary/figures/raw.png> <./summary/figures/systematics.png> <./summ\n",
      "ary/figures/comparison.png>] (./A_20220613_prose_a_report.aux\n",
      "(./summary/summary.aux))\n",
      "\n",
      "Package rerunfilecheck Warning: File `A_20220613_prose_a_report.out' has change\n",
      "d.\n",
      "(rerunfilecheck)                Rerun to get outlines right\n",
      "(rerunfilecheck)                or use package `bookmark'.\n",
      "\n",
      " )\n",
      "(\\end occurred inside a group at level 1)\n",
      "\n",
      "### simple group (level 1) entered at line 27 ({)\n",
      "### bottom level\n",
      "(see the transcript file for additional information){/usr/local/texlive/2021/te\n",
      "xmf-dist/fonts/enc/dvips/cm-super/cm-super-t1.enc}{/usr/local/texlive/2021/texm\n",
      "f-dist/fonts/enc/dvips/roboto/rbto_ocbbsb.enc}{/usr/local/texlive/2021/texmf-di\n",
      "st/fonts/enc/dvips/roboto/rbto_b5rac7.enc}{/usr/local/texlive/2021/texmf-dist/f\n",
      "onts/enc/dvips/lm/lm-ec.enc}</usr/local/texlive/2021/texmf-dist/fonts/type1/goo\n",
      "gle/roboto/Roboto-Regular.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/p\n",
      "ublic/amsfonts/cm/cmsy8.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/pub\n",
      "lic/lm/lmss8.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/public/cm-supe\n",
      "r/sfrm1000.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/public/cm-super/\n",
      "sfsi0800.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/public/cm-super/sf\n",
      "si0900.pfb></usr/local/texlive/2021/texmf-dist/fonts/type1/public/cm-super/sfss\n",
      "1728.pfb>\n",
      "Output written on A_20220613_prose_a_report.pdf (1 page, 1019267 bytes).\n",
      "Transcript written on A_20220613_prose_a_report.log.\n"
     ]
    }
   ],
   "source": [
    "report.compile()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "recorded-destination",
   "metadata": {},
   "source": [
    "![](A_20220613_prose_a_report.png)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
